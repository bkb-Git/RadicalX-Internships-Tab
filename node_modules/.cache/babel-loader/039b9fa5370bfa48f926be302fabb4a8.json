{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nfunction setGuideLine(chart, item) {\n  if (item.quickType === 'parallel') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: ['min', data],\n      end: ['max', data]\n    }, item));\n  } else if (item.quickType === 'normal') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: [data, 'min'],\n      end: [data, 'max']\n    }, item));\n  } else {\n    chart.guide().line(item);\n  }\n}\nfunction setGuideArc(chart, item) {\n  if (item.quickType === 'parallel') {\n    var data = item.data;\n    chart.guide().arc(__assign({\n      start: ['min', data],\n      end: ['max', data]\n    }, item));\n    chart.guide().arc(__assign({\n      start: ['max', data],\n      end: ['min', data]\n    }, item));\n  } else if (item.quickType === 'normal') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: [data, 'min'],\n      end: [data, 'max']\n    }, item));\n  } else {\n    chart.guide().arc(item);\n  }\n}\nexport var process = function (chart, config, isUpdate) {\n  if (isUpdate === void 0) {\n    isUpdate = false;\n  }\n  var cGuide = _.cloneDeep(config.guide);\n  var isArr = Array.isArray(cGuide);\n  if (_.isNil(cGuide) || _.isEmpty(cGuide)) {\n    return;\n  }\n  var arrGuide = isArr ? cGuide : [cGuide];\n  arrGuide.forEach(function (res) {\n    if (!isUpdate) {\n      EventUtils.setEvent(chart, \"guide-\" + res.type, res);\n    }\n    if (res.type === 'line') {\n      setGuideLine(chart, res);\n    } else if (res.type === 'region') {\n      chart.guide().region(res);\n    } else if (res.type === 'arc') {\n      setGuideArc(chart, res);\n    } else if (res.type === 'text') {\n      chart.guide().text(res);\n    } else if (res.type === 'image') {\n      chart.guide().image(res);\n    } else if (res.type === 'html') {\n      chart.guide().html(res);\n    } else if (res.type === 'dataMarker') {\n      chart.guide().dataMarker(res);\n    } else if (res.type === 'regionFilter') {\n      chart.guide().regionFilter(res);\n    } else if (res.type === 'dataRegion') {\n      chart.guide().dataRegion(res);\n    }\n  });\n  return chart;\n};","map":{"version":3,"mappings":"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","names":["_","EventUtils","setGuideLine","chart","item","quickType","data","guide","line","start","end","setGuideArc","arc","process","config","isUpdate","cGuide","cloneDeep","isArr","Array","isArray","isNil","isEmpty","arrGuide","forEach","res","setEvent","type","region","text","image","html","dataMarker","regionFilter","dataRegion"],"sourceRoot":"","sources":["../../src/components/setGuideConfig.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}