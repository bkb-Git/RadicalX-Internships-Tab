{"ast":null,"code":"import * as _ from '@antv/util';\nimport { DEFAULT_Y } from '../constant';\nvar Adjust = /** @class */function () {\n  function Adjust(cfg) {\n    var xField = cfg.xField,\n      yField = cfg.yField,\n      _a = cfg.adjustNames,\n      adjustNames = _a === void 0 ? ['x', 'y'] : _a,\n      dimValuesMap = cfg.dimValuesMap;\n    this.adjustNames = adjustNames;\n    this.xField = xField;\n    this.yField = yField;\n    this.dimValuesMap = dimValuesMap;\n  }\n  /**\n   * 查看维度是否是 adjust 字段\n   * @param dim\n   */\n  Adjust.prototype.isAdjust = function (dim) {\n    return this.adjustNames.indexOf(dim) >= 0;\n  };\n  Adjust.prototype.getAdjustRange = function (dim, dimValue, values) {\n    var yField = this.yField;\n    var index = values.indexOf(dimValue);\n    var length = values.length;\n    var pre;\n    var next;\n    // 没有 y 字段，但是需要根据 y 调整\n    if (!yField && this.isAdjust('y')) {\n      pre = 0;\n      next = 1;\n    } else if (length > 1) {\n      // 如果以其开头，则取之，否则取他前面一个\n      pre = values[index === 0 ? 0 : index - 1];\n      // 如果以其结尾，则取之，否则取他后面一个\n      next = values[index === length - 1 ? length - 1 : index + 1];\n      if (index !== 0) {\n        pre += (dimValue - pre) / 2;\n      } else {\n        pre -= (next - dimValue) / 2;\n      }\n      if (index !== length - 1) {\n        next -= (next - dimValue) / 2;\n      } else {\n        next += (dimValue - values[length - 2]) / 2;\n      }\n    } else {\n      pre = dimValue === 0 ? 0 : dimValue - 0.5;\n      next = dimValue === 0 ? 1 : dimValue + 0.5;\n    }\n    return {\n      pre: pre,\n      next: next\n    };\n  };\n  Adjust.prototype.adjustData = function (groupedDataArray, mergedData) {\n    var _this = this;\n    // 所有调整维度的值数组\n    var dimValuesMap = this.getDimValues(mergedData);\n    // 按照每一个分组来进行调整\n    _.each(groupedDataArray, function (dataArray, index) {\n      // 遍历所有数据集合\n      // 每个分组中，分别按照不同的 dim 进行调整\n      _.each(dimValuesMap, function (values, dim) {\n        // 根据不同的度量分别调整位置\n        _this.adjustDim(dim, values, dataArray, index);\n      });\n    });\n  };\n  /**\n   * 对数据进行分组adjustData\n   * @param data 数据\n   * @param dim 分组的字段\n   * @return 分组结果\n   */\n  Adjust.prototype.groupData = function (data, dim) {\n    // 补齐数据空数据为默认值\n    _.each(data, function (record) {\n      if (record[dim] === undefined) {\n        record[dim] = DEFAULT_Y;\n      }\n    });\n    // 按照 dim 维度分组\n    return _.groupBy(data, dim);\n  };\n  /** @override */\n  Adjust.prototype.adjustDim = function (dim, values, data, index) {};\n  /**\n   * 获取可调整度量对应的值\n   * @param mergedData 数据\n   * @return 值的映射\n   */\n  Adjust.prototype.getDimValues = function (mergedData) {\n    var _a = this,\n      xField = _a.xField,\n      yField = _a.yField;\n    var dimValuesMap = _.assign({}, this.dimValuesMap);\n    // 所有的维度\n    var dims = [];\n    if (xField && this.isAdjust('x')) {\n      dims.push(xField);\n    }\n    if (yField && this.isAdjust('y')) {\n      dims.push(yField);\n    }\n    dims.forEach(function (dim) {\n      if (dimValuesMap && dimValuesMap[dim]) {\n        return;\n      }\n      // 在每个维度上，所有的值\n      dimValuesMap[dim] = _.valuesOfKey(mergedData, dim).sort(function (v1, v2) {\n        return v1 - v2;\n      });\n    });\n    // 只有一维的情况下，同时调整 y，赋予默认值\n    if (!yField && this.isAdjust('y')) {\n      var dim = 'y';\n      dimValuesMap[dim] = [DEFAULT_Y, 1]; // 默认分布在 y 轴的 0 与 1 之间\n    }\n\n    return dimValuesMap;\n  };\n  return Adjust;\n}();\nexport default Adjust;","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,YAAY;AAC/B,SAASC,SAAS,QAAQ,aAAa;AASvC;EA6CE,gBAAYC,GAAoD;IACtD,UAAM,GAAqDA,GAAG,OAAxD;MAAEC,MAAM,GAA6CD,GAAG,OAAhD;MAAEE,KAA2CF,GAAG,YAAtB;MAAxBG,WAAW,mBAAG,CAAC,GAAG,EAAE,GAAG,CAAC;MAAEC,YAAY,GAAKJ,GAAG,aAAR;IAE9D,IAAI,CAACG,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACG,YAAY,GAAGA,YAAY;EAClC;EAKA;;;;EAIOE,yBAAQ,GAAf,UAAgBC,GAAW;IACzB,OAAO,IAAI,CAACJ,WAAW,CAACK,OAAO,CAACD,GAAG,CAAC,IAAI,CAAC;EAC3C,CAAC;EAESD,+BAAc,GAAxB,UAAyBC,GAAW,EAAEE,QAAgB,EAAEC,MAAgB;IAC9D,UAAM,GAAK,IAAI,OAAT;IAEd,IAAMC,KAAK,GAAGD,MAAM,CAACF,OAAO,CAACC,QAAQ,CAAC;IACtC,IAAMG,MAAM,GAAGF,MAAM,CAACE,MAAM;IAE5B,IAAIC,GAAG;IACP,IAAIC,IAAI;IAER;IACA,IAAI,CAACb,MAAM,IAAI,IAAI,CAACc,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjCF,GAAG,GAAG,CAAC;MACPC,IAAI,GAAG,CAAC;KACT,MAAM,IAAIF,MAAM,GAAG,CAAC,EAAE;MACrB;MACAC,GAAG,GAAGH,MAAM,CAACC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,CAAC;MACzC;MACAG,IAAI,GAAGJ,MAAM,CAACC,KAAK,KAAKC,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC,GAAGD,KAAK,GAAG,CAAC,CAAC;MAE5D,IAAIA,KAAK,KAAK,CAAC,EAAE;QACfE,GAAG,IAAI,CAACJ,QAAQ,GAAGI,GAAG,IAAI,CAAC;OAC5B,MAAM;QACLA,GAAG,IAAI,CAACC,IAAI,GAAGL,QAAQ,IAAI,CAAC;;MAG9B,IAAIE,KAAK,KAAKC,MAAM,GAAG,CAAC,EAAE;QACxBE,IAAI,IAAI,CAACA,IAAI,GAAGL,QAAQ,IAAI,CAAC;OAC9B,MAAM;QACLK,IAAI,IAAI,CAACL,QAAQ,GAAGC,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;;KAE9C,MAAM;MACLC,GAAG,GAAGJ,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,GAAG,GAAG;MACzCK,IAAI,GAAGL,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,GAAG,GAAG;;IAG5C,OAAO;MACLI,GAAG;MACHC,IAAI;KACL;EACH,CAAC;EAESR,2BAAU,GAApB,UAAqBU,gBAA0B,EAAEC,UAAkB;IAAnE;IACE;IACA,IAAMb,YAAY,GAAG,IAAI,CAACc,YAAY,CAACD,UAAU,CAAC;IAElD;IACAnB,CAAC,CAACqB,IAAI,CAACH,gBAAgB,EAAE,UAACI,SAAS,EAAET,KAAK;MACxC;MACA;MACAb,CAAC,CAACqB,IAAI,CAACf,YAAY,EAAE,UAACM,MAAgB,EAAEH,GAAW;QACjD;QACAc,KAAI,CAACC,SAAS,CAACf,GAAG,EAAEG,MAAM,EAAEU,SAAS,EAAET,KAAK,CAAC;MAC/C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED;;;;;;EAMUL,0BAAS,GAAnB,UAAoBiB,IAAY,EAAEhB,GAAW;IAC3C;IACAT,CAAC,CAACqB,IAAI,CAACI,IAAI,EAAE,UAACC,MAAY;MACxB,IAAIA,MAAM,CAACjB,GAAG,CAAC,KAAKkB,SAAS,EAAE;QAC7BD,MAAM,CAACjB,GAAG,CAAC,GAAGR,SAAS;;IAE3B,CAAC,CAAC;IAEF;IACA,OAAOD,CAAC,CAAC4B,OAAO,CAACH,IAAI,EAAEhB,GAAG,CAAC;EAC7B,CAAC;EAED;EACUD,0BAAS,GAAnB,UAAoBC,GAAW,EAAEG,MAAgB,EAAEa,IAAY,EAAEZ,KAAc,GAAS,CAAC;EAEzF;;;;;EAKQL,6BAAY,GAApB,UAAqBW,UAAkB;IAC/B,SAAqB,IAAI;MAAvBZ,MAAM;MAAEJ,MAAM,YAAS;IAE/B,IAAMG,YAAY,GAAqBN,CAAC,CAAC6B,MAAM,CAAC,EAAE,EAAE,IAAI,CAACvB,YAAY,CAAC;IAEtE;IACA,IAAMwB,IAAI,GAAG,EAAE;IACf,IAAIvB,MAAM,IAAI,IAAI,CAACU,QAAQ,CAAC,GAAG,CAAC,EAAE;MAChCa,IAAI,CAACC,IAAI,CAACxB,MAAM,CAAC;;IAEnB,IAAIJ,MAAM,IAAI,IAAI,CAACc,QAAQ,CAAC,GAAG,CAAC,EAAE;MAChCa,IAAI,CAACC,IAAI,CAAC5B,MAAM,CAAC;;IAGnB2B,IAAI,CAACE,OAAO,CAAC,UAACvB,GAAW;MACvB,IAAIH,YAAY,IAAIA,YAAY,CAACG,GAAG,CAAC,EAAE;QACrC;;MAEF;MACAH,YAAY,CAACG,GAAG,CAAC,GAAGT,CAAC,CAACiC,WAAW,CAACd,UAAU,EAAEV,GAAG,CAAC,CAACyB,IAAI,CAAC,UAACC,EAAE,EAAEC,EAAE;QAAK,SAAE,GAAGA,EAAE;MAAP,CAAO,CAAa;IAC1F,CAAC,CAAC;IAEF;IACA,IAAI,CAACjC,MAAM,IAAI,IAAI,CAACc,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjC,IAAMR,GAAG,GAAG,GAAG;MACfH,YAAY,CAACG,GAAG,CAAC,GAAG,CAACR,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;;;IAGtC,OAAOK,YAAY;EACrB,CAAC;EACH,aAAC;AAAD,CAAC,EAjLD","names":["_","DEFAULT_Y","cfg","yField","_a","adjustNames","dimValuesMap","xField","Adjust","dim","indexOf","dimValue","values","index","length","pre","next","isAdjust","groupedDataArray","mergedData","getDimValues","each","dataArray","_this","adjustDim","data","record","undefined","groupBy","assign","dims","push","forEach","valuesOfKey","sort","v1","v2"],"sourceRoot":"","sources":["../../src/adjusts/adjust.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}