{"ast":null,"code":"import * as CustomizeUtils from '../utils/CustomizeUtils';\nvar DEFAULT_SANKEY_SHAPE = 'sankey';\nfunction interpolationGenerator(a, b) {\n  var ka = +a;\n  var kb = b - ka;\n  return function (t) {\n    return ka + kb * t;\n  };\n}\nfunction getCurvePath(from, to, curvature) {\n  var interpolationFunc = interpolationGenerator(from.x, to.x);\n  var fromCtrlX = interpolationFunc(curvature);\n  var toCtrlX = interpolationFunc(1 - curvature);\n  var points = ['C', fromCtrlX, from.y, toCtrlX, to.y, to.x, to.y];\n  return points;\n}\nfunction getEdgePath(points, curvature) {\n  var path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y]];\n  var c1 = getCurvePath(points[1], points[3], curvature);\n  path.push(c1);\n  path.push(['L', points[3].x, points[3].y]);\n  path.push(['L', points[2].x, points[2].y]);\n  var c2 = getCurvePath(points[2], points[0], curvature);\n  path.push(c2);\n  path.push(['Z']);\n  return path;\n}\nexport var registerShape = function () {\n  CustomizeUtils.registerShape('edge', DEFAULT_SANKEY_SHAPE, {\n    drawShape: function (cfg, group) {\n      var points = cfg.points,\n        style = cfg.style;\n      var curvature = style.curvature || 0.5;\n      var path = this.parsePath(getEdgePath(points, curvature));\n      var shape = group.addShape('path', {\n        attrs: {\n          stroke: 'none',\n          strokeOpacity: 0,\n          fill: cfg.color,\n          opacity: cfg.opacity,\n          path: path\n        }\n      });\n      return shape;\n    }\n  });\n};","map":{"version":3,"mappings":"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","names":["CustomizeUtils","DEFAULT_SANKEY_SHAPE","interpolationGenerator","a","b","ka","kb","t","getCurvePath","from","to","curvature","interpolationFunc","x","fromCtrlX","toCtrlX","points","y","getEdgePath","path","c1","push","c2","registerShape","drawShape","cfg","group","style","parsePath","shape","addShape","attrs","stroke","strokeOpacity","fill","color","opacity"],"sourceRoot":"","sources":["../../src/shapes/Sankey.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}