{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as _ from 'lodash';\nimport { degreeToRadian } from '../utils/PolarUtils';\nfunction setPolarCoord(chart, coord) {\n  var newCoord = {};\n  if (coord.radius && (coord.radius < 0 || coord.radius > 1) || coord.innerRadius && (coord.innerRadius < 0 || coord.innerRadius > 1)) {\n    throw new Error('please set correct radius or innerRadius');\n  }\n  if (coord.radius) {\n    newCoord = __assign({}, newCoord, {\n      radius: coord.radius\n    });\n  }\n  if (coord.innerRadius) {\n    newCoord = __assign({}, newCoord, {\n      innerRadius: coord.innerRadius\n    });\n  }\n  if (coord.startAngle || coord.endAngle) {\n    if (coord.startAngle && (coord.startAngle < -360 || coord.startAngle > 360)) {\n      throw new Error('please set correct starAngle');\n    } else {\n      newCoord = __assign({}, newCoord, {\n        startAngle: degreeToRadian(coord.startAngle)\n      });\n    }\n    if (coord.endAngle && (coord.endAngle < -360 || coord.endAngle > 360)) {\n      throw new Error('please set correct endAngle');\n    } else {\n      newCoord = __assign({}, newCoord, {\n        endAngle: degreeToRadian(coord.endAngle)\n      });\n    }\n  }\n  var polarCoord = chart.coord(coord.type, __assign({}, newCoord));\n  switch (coord.direction) {\n    case 'rotate':\n      polarCoord.transpose();\n      break;\n    case 'xReverse':\n      polarCoord.reflect('x');\n      break;\n    case 'yReverse':\n      polarCoord.reflect('y');\n      break;\n    case 'reverse':\n      polarCoord.reflect();\n      break;\n    default:\n      break;\n  }\n  if (coord.rotate) {\n    polarCoord.rotate(coord.rotate);\n  }\n  return polarCoord;\n}\nfunction setRectCoord(chart, coord) {\n  if (!coord.direction) {\n    return chart.coord('rect');\n  }\n  switch (coord.direction) {\n    case 'BL':\n      chart.coord('rect');\n      break;\n    case 'BR':\n      chart.coord('rect').scale(-1, 1);\n      break;\n    case 'LT':\n      chart.coord('rect').transpose().scale(1, -1);\n      break;\n    case 'LB':\n      chart.coord('rect').transpose();\n      break;\n    case 'RB':\n      chart.coord('rect').transpose().reflect();\n      break;\n    case 'RT':\n      chart.coord('rect').transpose().reflect().scale(-1, 1);\n      break;\n    case 'TL':\n      chart.coord('rect').reflect();\n      break;\n    case 'TR':\n      chart.coord('rect').reflect().scale(-1, 1);\n      break;\n    default:\n      chart.coord('rect');\n      break;\n  }\n  return chart;\n}\nexport var process = function (chart, config) {\n  var cCoord = _.cloneDeep(config.coord);\n  if (!cCoord || !cCoord.type) {\n    return chart.coord('rect');\n  }\n  var type = cCoord.type;\n  if (type === 'polar' || type === 'theta' || type === 'helix') {\n    return setPolarCoord(chart, cCoord);\n  }\n  if (type === 'rect') {\n    return setRectCoord(chart, cCoord);\n  }\n  return chart.coord(type);\n};","map":{"version":3,"mappings":"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","names":["_","degreeToRadian","setPolarCoord","chart","coord","newCoord","radius","innerRadius","Error","startAngle","endAngle","polarCoord","type","direction","transpose","reflect","rotate","setRectCoord","scale","process","config","cCoord","cloneDeep"],"sourceRoot":"","sources":["../../src/components/setCoordConfig.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}